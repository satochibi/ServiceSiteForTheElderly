
@{
    Layout = null;
    var CurrentSession = ViewData["CurrentSession"] as ServiceSiteForTheElderly.Models.ViewModels.SessionModel;
    string categoryName = ViewData["categoryName"] as string;
    int? categoryId = ViewData["categoryId"] as int?;
}

<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>高齢者のお困り解決砥部町内サービスサイト</title>
    <link rel="stylesheet" href="@Url.Content("~/css/normalize.css")">
    <link rel="stylesheet" href="@Url.Content("~/css/obento.css")">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
</head>

<body>
    <input type="hidden" id="UrlActionAddToCart" value="@Url.Action("AddToCart", "Home")" />
    <input type="hidden" id="NavigatorNext" value="@Url.Action("ShoppingCart", "Home")" />
    <input type="hidden" id="categoryId" value="@categoryId" />
    <input type="hidden" id="UrlActionBackorder" value="@Url.Action("Backorder", "Home")"/>
    <input type="hidden" id="NavigatorComplete" value="@Url.Action("BackorderComplete", "Home")" />
    <div class="container">
        <header>
            <h1><a href="@Url.Action("Index", "Home")">高齢者の<span>お困り解決</span>サイト<br>(砥部町内サービス)</a></h1>
            <div class="header-buttons">
                <div class="shopping-cart">
                    <span class="shopping-count-badge @ViewData["HeaderBadgeStatus"]">@ViewData["HeaderBadge"]</span>
                    <a href="@Url.Action("ShoppingCart", "Home")" class="shopping-cart-button"><i class="fas fa-shopping-cart"></i>買い物カゴを見る</a>
                </div>
                <a href="@ViewData["HeaderButtonLink"]" class="avatar-button"><i class="fa-solid fa-user"></i>@ViewData["HeaderButtonText"]</a>
            </div>
        </header>


        <div class="breadcrumb-list">
            <ul>
                <li><a href="@Url.Action("Index", "Home")">HOME</a></li>
                <li><a href="#">@ViewData["categoryName"]</a></li>
            </ul>
        </div>

        <div class="main-contents">
            <h2>@ViewData["categoryName"]の宅配サービス</h2>

            @if (CurrentSession.customerUserInfo != null && (categoryName == "本" || categoryName == "特産品"))
            {
                <div id="order">
                    <form action="">
                        <h3>@ViewData["categoryName"]購入の申込</h3>
                        <div class="input-container">
                            <div class="input-field grow-field">
                                <label for="backorder-goodsname">商品名</label>
                                <input type="text" id="backorder-goodsname" name="name" placeholder="取り寄せる商品名">
                            </div>
                            <div class="message grow-field">
                                申込み後、担当者より連絡いたします
                            </div>
                            <div class="button-field grow-field" id="order-button">
                                <button class="form-primary-button" type="submit">申込</button>
                            </div>
                        </div>

                    </form>
                </div>
            }


            <div id="search">
                <form action="">
                    <input type="search" name="q" placeholder="商品検索" value="@ViewData["q"]">
                    <input type="hidden" name="id" value="@ViewData["id"]" />
                    <div class="button-field">
                        <button class="form-primary-button" type="submit">
                            <i class="fa-solid fa-magnifying-glass"></i>
                        </button>
                    </div>
                </form>
            </div>

            <div class="shopping-table">
                @Html.Raw(ViewData["goods"])
            </div>
        </div>




        <footer>

            <div class="footer-logo">
                HAISABU Platform
            </div>

            <!-- <div class="ads">
                広告
            </div> -->

        </footer>
    </div>

    <script>
        $(function () {
            $(".goods").each(function (index, element) {
                const goodsId = parseInt($(element).attr("id").replace("goods-", ""));
                // console.log(goodsId);

                $(element).on("submit", function (event) {
                    event.preventDefault();
                    const data = $(element).serializeArray();
                    const inputData = data.map(item => ({ "GoodsId": goodsId, "Variety": (item.name == "variety") ? "" : item.name, "Quantity": parseInt(item.value) }));

                    const inputCheck = inputData.every(item => item.Quantity == 0);

                    if (inputCheck) {
                        alert("個数を入力してください");
                        return;
                    } else {
                        const postUrl = $("#UrlActionAddToCart").val();
                        const nextUrl = $("#NavigatorNext").val();
                        postfuncajax(postUrl, nextUrl, inputData);
                    }

                });

            });



            $("#order > form").on("submit", function (event) {
                event.preventDefault();
                const data = $(this).serializeArray();
                const inputData = data.map(item => ({ "GoodsName": item.value, "CategoryId": $("#categoryId").val() }))[0];

                if (!inputData.GoodsName) {
                    alert("商品名を入力してください");
                    return;
                } else {
                    const postUrl = $("#UrlActionBackorder").val();
                    const nextUrl = $("#NavigatorComplete").val();
                    const answer = confirm('商品を取り寄せますか?');
                    if (answer) {
                        postfuncajax(postUrl, nextUrl, inputData)
                    }
                }
            });


            function postfuncajax(postUrl, nextUrl, inputData) {
                const jsonString = JSON.stringify(inputData);

                $.ajax({
                    url: postUrl,
                    type: "POST",
                    async: false,
                    data: jsonString,
                    dataType: "json",
                    contentType: 'application/json',
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var message = XMLHttpRequest.status;
                        alert(message);
                    },
                    success: function (data) {
                        switch (data.status) {
                            case "success":
                                // alert("カートに入れた");
                                location.href = nextUrl;
                                break;
                            case "maxQuantityError":
                                alert("1つの商品に対して10個以上カゴに入れることはできません");
                                break;
                            case "error":
                            default:
                                alert("エラーが起こりました");
                                break;
                        }

                    }
                });
            }

        });
    </script>

</body>

</html>